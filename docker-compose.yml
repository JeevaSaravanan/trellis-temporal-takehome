services:
  db:
    image: postgres:16-alpine
    container_name: trellis-db
    env_file: .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${HOST_DB_PORT:-5432}:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      # Wait until PostgreSQL accepts connections
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -h localhost"]
      interval: 2s
      timeout: 2s
      retries: 20

  # One-shot migrator that applies SQL after DB is healthy.
  db-migrate:
    image: postgres:16-alpine
    container_name: trellis-db-migrate
    depends_on:
      db:
        condition: service_healthy
    env_file: .env
    volumes:
      - ./migrations:/migrations:ro
    entrypoint:
      - sh
      - -c
      - |
        set -e
        echo "Running migrations..."
        psql "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}" \
          -v ON_ERROR_STOP=1 \
          -f /migrations/001_init.sql
        echo "Migrations applied."
    restart: "no"

volumes:
  db-data:
